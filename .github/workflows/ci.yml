name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      env:
        NEXT_TELEMETRY_DISABLED: 1
      
    - name: Run unit tests
      run: npm run test:run
      env:
        NEXT_PUBLIC_SUPABASE_URL: 'https://test.supabase.co'
        NEXT_PUBLIC_SUPABASE_ANON_KEY: 'test-anon-key'
        SUPABASE_SERVICE_ROLE_KEY: 'test-service-role-key'
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: 'test-clerk-key'
        CLERK_SECRET_KEY: 'test-clerk-secret'

    - name: Run integration tests
      run: npm run test
      env:
        NEXT_PUBLIC_SUPABASE_URL: 'https://test.supabase.co'
        NEXT_PUBLIC_SUPABASE_ANON_KEY: 'test-anon-key'
        SUPABASE_SERVICE_ROLE_KEY: 'test-service-role-key'
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: 'test-clerk-key'
        CLERK_SECRET_KEY: 'test-clerk-secret'

    - name: Run Playwright tests
      run: npm run test:e2e
      env:
        NEXT_PUBLIC_SUPABASE_URL: 'https://test.supabase.co'
        NEXT_PUBLIC_SUPABASE_ANON_KEY: 'test-anon-key'
        SUPABASE_SERVICE_ROLE_KEY: 'test-service-role-key'
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: 'test-clerk-key'
        CLERK_SECRET_KEY: 'test-clerk-secret'
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results/
          playwright-report/
        retention-days: 7

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        # Required for Next.js build
        NEXT_PUBLIC_SUPABASE_URL: 'https://placeholder.supabase.co'
        NEXT_PUBLIC_SUPABASE_ANON_KEY: 'placeholder-key'
        SUPABASE_SERVICE_ROLE_KEY: 'placeholder-service-key'
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: 'placeholder-clerk-key'
        CLERK_SECRET_KEY: 'placeholder-clerk-secret'
        SENTRY_DSN: 'placeholder-sentry-dsn'
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: |
          .next/
          out/
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
      
    - name: Run dependency check
      run: npx audit-ci --moderate
      continue-on-error: true

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        github-comment: true
        
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel Production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        github-comment: true
